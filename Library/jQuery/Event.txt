Events               -  -> An Event is a user Interaction with the Browser.
                        -> We can Bind any number of Events to any Element in the DOM.
                        -> Same Event can be Binded to the Same Element Multiple times.
                        -> Events belong to a Specific Type.(e.g MouseEvent Type Consists of Click, dblclick etc..)
                        -> Each Event Type is a SEPARATE JavaScript OBJECT TYPE(i.e A Constructor is Defined for Each Event Type), having their own properties and Methods.
                        -> Each Event is an Object/Instance of a Particular Event Type.

WorkFlow             -  -> When an Event is Triggered on an Element, it DOES NOT START from that Element.
                        -> Event START AT THE ROOT(window Element), and slowly make its way all the way Down until it Hits the Destination(The Element on which the Event was Triggered).
                        -> ALL EVENTS TRAVERSE till the Destination, even IF THE Destination Element DOES NOT HAVE any Handler associated for that Event. This is done to support
                           Event Capturing and Event Bubbling.
                        -> This is the case for all Events.(i.e Even if we use an onclick attribute on an Element).
                        -> In the Process of the Event Going Down to the Destination(Actual Element on which the Event is Triggered), it actually TOUCHES each and Every Element on its Path
                           (i.e All the Ancestors of the Element) and INFORMS every elements that an Event has taken place.
                           This is called as the Phase 1 or Event CAPTURING Phase.
                        -> The Event, Once it has Reached its Destination also makes its way all the way back to the ROOT Element and Notifies Every Element on its path that an Event has occurred.
                           This is called as the Phase 2 or Event BUBBLING Phase.
                        -> Thus, when an Element is Clicked, all of its Ancestors are Notified TWICE.(While Coming Down and Going Up)
                        -> The third parameter in the addEventListener, specifies whether the Event Will be Listened in the Capturing Phase or in the Bubbling Phase.
                           true means capturing Phase, whereas false means Bubbling Phase.
                        -> If we want a Particular Event on an Element to be handled on Both phases, we should have Two Event Handlers for that Event on that Element(One for Each Phase).


Event handler/       -  -> Event handler is an object that implements the EventListener interface and provides an EventListener.handleEvent() callback method. Event handlers are language-specific.
Event listener          -> This Object is a normalized subset of data provided by the browser; the browser's unmodified native event object is available in event.originalEvent.
                        -> Event handlers are invoked in the context of a particular object/Matching Selector(Incase of Delegates) (the current event target)(i.e the Event handler "this" value is set to E's currentTarget and
                           are also provided with the event object itself(as Parameter).
                       *-> For directly bound events, "this"(e.currenttarget) is the element where the event was attached and for delegated events "this"(e.currenttarget) is an element Matching Selector.
                        -> When a Function is invoked through onclick, the "this" does not point to the Current Element, but instead it points to its Usual value.
                        -> They are invoked with one argument, the value of which is the Event object E.
                        -> When an Event Occurs on an Element and that Element has that Event Binded to it, then an Event handler(basically a JavaScript Function) is used/Called
                           to Handle that Event.
                        -> The event.target ALWAYS points to the Element on which the Event is Triggered, Even if that Element does not have any Event handlers associated with it.

Event Delegations    -  -> DOM event delegation is a mechanism of responding to ui-events via a single common parent rather than each child, through the magic of event
                           "bubbling" (aka event propagation).
                        -> Event Delegation allows us to AVOID Adding Event Listeners to Specific Nodes, instead the Event Listener is added to ONE PARENT.
                           That Event Listener analyzes the Bubbled Events to find a match on Child Elements.
                        -> This is more like a CONTROLLER, Which Controls/Handles the Events ON ALL OF ITS DESCENDANTS.
                        -> Another benefit to event delegation is that the total memory footprint used by event listeners goes down (since the number of event bindings go down).

Direct and delegated    -> If selector is omitted or is null, the event handler is referred to as Direct or directly-bound. The handler is called every time an event occurs on the selected elements,
events                      whether it occurs directly on the element or bubbles from a descendant (inner) element.
                       *-> When a selector is provided, the event handler is referred to as delegated. The handler is not called when the event occurs directly on the bound element,
                           but only for descendants (inner elements) that match the selector.
                        -> Event handlers are bound only to the currently selected elements; they must exist at the time your code makes the call to .on().
                           To ensure the elements are present and can be selected, place scripts after the elements in the HTML markup or perform event binding inside a document ready handler.
                           Alternatively, use delegated events to attach event handlers(explained below).
                        -> Delegated events have the advantage that they can process events from descendant elements that are added to the document at a later time
                        -> By picking an element that is guaranteed to be present at the time the delegated event handler is attached, you can use delegated events
                           to avoid the need to frequently attach and remove event handlers.
                        -> This element could be the container element of a view in a Model-View-Controller design, for example, or document
                        -> In addition to their ability to handle events on descendant elements NOT YET CREATED, another advantage of delegated events is their potential for much lower overhead
                           when many elements must be monitored.

Event names and      -  -> An event name can be qualified by event namespaces that simplify removing or triggering the event.(e.g click.sample, custom.musheer etc..)
namespaces              -> jQuery will pass through the browser's standard JavaScript event types, calling the handler function when the browser generates events due to user actions such as click
                        -> In addition, the .trigger() method can trigger both standard browser event names and CUSTOM EVENT names to call attached handlers.
                        -> Event names should only contain alphanumerics, underscore, and colon characters.
                        -> An event name can be qualified by event namespaces that simplify removing or triggering the event. For example, "click.myPlugin.simple" defines
                           both the myPlugin and simple namespaces for this particular click event.
                        -> A click event handler attached via that string could be removed with .off("click.myPlugin") or .off("click.simple")
                           without disturbing other click handlers attached to the elements.
                        -> Namespaces are similar to CSS classes(Multiple Namespace for Single Event Starting with ".") in that they are not hierarchical. Only one name needs to match.
                        -> Namespaces beginning with an underscore are reserved for jQuery's use.

Event performance    -  -> Attaching many delegated event handlers near the TOP of the document tree can degrade performance. (i.e) For best performance, attach delegated events
                           at a document location as close as possible to the target elements.
                        -> Delegated events that use more complex selectors, particularly hierarchical ones, can be several times slower--although they are still fast enough for most applications.
                           (e.g "#commentForm .addNew" ). Hierarchical selectors can often be avoided simply by attaching the handler to a more appropriate point in the document.
                           (e.g. $( "#commentForm" ).on( "click", ".addNew", addComment ))
                        -> Care should be taken when using Event handlers for Events that fire Multiple Times per Second.


Properties/Functions    -> e.stopPropagation()  -  -> To interrupt an Event and Permanently derail it from its Path Entirely(i.e The Event is COMPLETELY Stopped from advancing/The Event is DONE).
of Event Object                                    -> Returning false from an event handler will automatically call event.stopPropagation() and event.preventDefault().
                                                   -> This method works for custom events triggered with trigger() as well.

                           e.isPropagationStopped()-> Returns whether event.stopPropagation() was ever called on this event object.

                           e.stopImmediatePropagation
                                                   -> Keeps/Prevents the rest of the handlers from being executed on an Element(Could be Handler for Different Events on the Element) and prevents
                                                      the event from bubbling up the DOM tree by implicitly calling event.stopPropagation().

                           e.isImmediatePropagationStopped()
                                                   -> Returns whether event.stopImmediatePropagation() was ever called on this event object.

                           e.preventDefault()   -  -> If this method is called, the default action of the event will not be triggered.
                                                   -> Returning false from an event handler will automatically call event.stopPropagation() and event.preventDefault().

                           e.isDefaultPrevented()  -> Returns whether event.preventDefault() was EVER called on THIS Event object.


                           e.currentTarget      -  -> The current DOM element within the event bubbling phase.
                                                   -> This property will typically be equal to the this of the function.
                                                   -> If you are using jQuery.proxy or another form of scope manipulation, this will be equal to whatever context you have provided, not event.currentTarget

                           e.target             -  -> The DOM element that initiated the event.
                                                   -> It is often useful to compare event.target to this in order to determine if the event is being handled due to event bubbling.
                                                      This property is very useful in event delegation, when events bubble.

                           e.relatedTarget      -  -> The other DOM element involved in the event, if any.
                                                   -> For mouseout, indicates the element being entered; for mouseover, indicates the element being exited.

                           e.delegateTarget        -> The element where the currently-called jQuery event handler was attached.
                                                   -> This property is most often useful in delegated events attached by .delegate() or .on(), where the event handler is attached at an ancestor of the element being processed.
                                                   -> It can be used, for example, to identify and remove event handlers at the delegation point.
                                                   -> For non-delegated event handlers attached directly to an element, event.delegateTarget will always be equal to event.currentTarget.

                           e.data               -  -> An optional object of data passed to an event method when the current executing handler is bound.

                           e.pageX              -  -> The mouse position relative to the left edge of the document.
                                                   -> Used in mousemove.

                           e.pageY              -  -> The mouse position relative to the top edge of the document.

                           e.namespace          -  -> The namespace specified when the event was triggered.
                                                   -> This will likely be used primarily by plugin authors who wish to handle tasks differently depending on the event namespace used.

                           e.metaKey            -  -> Returns a boolean value (true or false) that indicates whether or not the META key was pressed at the time the event fired.
                                                   -> On Macintosh keyboards, the META key maps to the Command key (⌘). While, On Windows keyboards, the META key maps to the Windows key.

                           e.type               -  -> Describes the nature of the event.

                           e.which              -  -> For key or mouse events, this property indicates the specific key or button that was pressed.

                           e.timeStamp          -  -> The difference in milliseconds between the time the browser created the event and January 1, 1970.
                                                   -> This property can be useful for profiling event performance by getting the event.timeStamp value at two points in the code(for different instance of an Event)
                                                      and noting the difference.
                                                   -> To simply determine the current time inside an event handler, use (new Date).getTime() instead.

                           e.result             -  -> The last value returned by an event handler that was triggered by this event, unless the value was undefined.



Notes :
   -> If we do not have a parameter in an Event Handler Function, then by default an "event" object is present(variable name is also event). But, that Object is a Raw JavaScript Event Object.
   -> $.event.fix(javascriptEvent) can be used to convert a Raw javascript Event object to a jQuery Event Object.
   -> When we register an event for the Element(s) using "on" method or any of its shortcuts, then an Event is actually Attached/Stored on EACH Element at THAT VERY MOMENT.
      Thus, if we add an Element LATER, which matches the Selector Expression used EARLIER to create an Event on the Matched Elements,
      the Newly Added Element WILL NOT have that EVENT BINDED to it. This is where Event Delegation comes into handy.
   -> Most/All of the Event Methods in jQuery Implicitly points to the "on" method.
   -> To find which event handlers are registered over an Element, use jQuery._data( rawDOMElement, "events" ). This only works if we have attached the Event Handler using jQuery. 
elem should be an HTML Element, not a jQuery object, or selector.

Standard events      -  -> These events are defined in official Web specifications, and should be common across browsers.
                        -> We can also find information about the event based on the Object sent with each Event Type.


|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|  Event Name	                  |         Event Type	            |       Fired when...
|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|   abort	                     |    UIEvent                     |  The loading of a resource has been aborted.
|   abort	                     |    ProgressEvent	            |  Progression has been terminated (not due to an error).
|   abort	                     |    Event	                     |  A transaction has been aborted.
|   afterprint	                  |    Event	                     |  The associated document has started printing or the print preview has been closed.
|   animationend	               |    AnimationEvent	            |  A CSS animation has completed.
|   animationiteration	         |    AnimationEvent	            |  A CSS animation is repeated.
|   animationstart	            |    AnimationEvent	            |  A CSS animation has started.
|   audioprocess	               |    AudioProcessingEvent	      |  The input buffer of a ScriptProcessorNode is ready to be processed.
|   audioend 	                  |    Event	                     |  The user agent has finished capturing audio for speech recognition.
|   audiostart 	               |    Event	                     |  The user agent has started to capture audio for speech recognition.
|   beforeprint	               |    Event	                     |  The associated document is about to be printed or previewed for printing.
|   beforeunload	               |    BeforeUnloadEvent           |  The window, the document and its resources are about to be unloaded.
|   beginEvent	                  |    TimeEvent	                  |  A SMIL animation element begins.
|   blocked	 	                  |                                |  An open connection to a database is blocking a versionchange transaction on the same database.
|   blur	                        |    FocusEvent	               |  An element has lost focus (does not bubble).
|   boundary 	                  |    SpeechSynthesisEvent	      |  The spoken utterance reaches a word or sentence boundary
|   cached	                     |    Event	                     |  The resources listed in the manifest have been downloaded, and the application is now cached.
|   canplay	                     |    Event	                     |  The user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.
|   canplaythrough	            |    Event	                     |  The user agent can play the media up to its end without having to stop for further buffering of content.
|   change	                     |    Event	                     |  HTML5	The change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.
|   chargingchange	            |    Event	                     |  The battery begins or stops charging.
|   chargingtimechange	         |    Event	                     |  The chargingTime attribute has been updated.
|   checking	                  |    Event	                     |  The user agent is checking for an update, or attempting to download the cache manifest for the first time.
|   click	                     |    MouseEvent	               |  A pointing device button has been pressed and released on an element.
|   close	                     |    Event	                     |  A WebSocket connection has been closed.
|   complete	 	               |                                |  A transaction successfully completed.
|   complete	                  |    OfflineAudioCompletionEvent	|  The rendering of an OfflineAudioContext is terminated.
|   compositionend	            |    CompositionEvent	         |  The composition of a passage of text has been completed or canceled.
|   compositionstart	            |    CompositionEvent	         |  The composition of a passage of text is prepared (similar to keydown for a keyboard input, but works with other inputs such as speech recognition).
|   compositionupdate	         |    CompositionEvent	         |  A character is added to a passage of text being composed.
|   contextmenu	               |    MouseEvent	               |  The right button of the mouse is clicked (before the context menu is displayed).
|   copy	                        |    ClipboardEvent	            |  The text selection has been added to the clipboard.
|   cut	                        |    ClipboardEvent	            |  The text selection has been removed from the document and added to the clipboard.
|   dblclick	                  |    MouseEvent	               |  A pointing device button is clicked twice on an element.
|   devicechange	               |    Event	                     |  A media device such as a camera, microphone, or speaker is connected or removed from the system.
|   devicelight	               |    DeviceLightEvent	         |  Fresh data is available from a light sensor.
|   devicemotion	               |    DeviceMotionEvent	         |  Fresh data is available from a motion sensor.
|   deviceorientation	         |    DeviceOrientationEvent	   |  Fresh data is available from an orientation sensor.
|   deviceproximity	            |    DeviceProximityEvent	      |  Fresh data is available from a proximity sensor (indicates an approximated distance between the device and a nearby object).
|   dischargingtimechange	      |    Event	                     |  The dischargingTime attribute has been updated.
|   DOMActivate 	               |    UIEvent	                  |  A button, link or state changing element is activated (use click instead).
|   DOMAttributeNameChanged      |    MutationNameEvent           |  Removed	The name of an attribute changed (use mutation observers instead).
|   DOMAttrModified 	            |    MutationEvent	            |  The value of an attribute has been modified (use mutation observers instead).
|   DOMCharacterDataModified     |    MutationEvent	            |  A text or another CharacterData has changed (use mutation observers instead).
|   DOMContentLoaded	            |    Event	                     |  The document has finished loading (but not its dependent resources).
|   DOMElementNameChanged 	      |    MutationNameEvent	         |  Removed	The name of an element changed (use mutation observers instead).
|   DOMFocusIn (Unimplemented)   |    FocusEvent	               |  An element has received focus (use focus or focusin instead).
|   DOMFocusOut(Unimplemented)   |    FocusEvent	               |  An element has lost focus (use blur or focusout instead).
|   DOMNodeInserted 	            |    MutationEvent               |  A node has been added as a child of another node (use mutation observers instead).
|   DOMNodeInsertedIntoDocument	|    MutationEvent               |  A node has been inserted into the document (use mutation observers instead).
|   DOMNodeRemoved 	            |    MutationEvent               |  A node has been removed from its parent node (use mutation observers instead).
|   DOMNodeRemovedFromDocument   |    MutationEvent               |  A node has been removed from the document (use mutation observers instead).
|   DOMSubtreeModified 	         |    MutationEvent               |  A change happened in the document (use mutation observers instead).
|   downloading	               |    Event	                     |  The user agent has found an update and is fetching it, or is downloading the resources listed by the cache manifest for the first time.
|   drag	                        |    DragEvent	                  |  An element or text selection is being dragged (every 350ms).
|   dragend	                     |    DragEvent	                  |  A drag operation is being ended (by releasing a mouse button or hitting the escape key).
|   dragenter	                  |    DragEvent	                  |  A dragged element or text selection enters a valid drop target.
|   dragleave	                  |    DragEvent	                  |  A dragged element or text selection leaves a valid drop target.
|   dragover	                  |    DragEvent	                  |  An element or text selection is being dragged over a valid drop target (every 350ms).
|   dragstart	                  |    DragEvent	                  |  The user starts dragging an element or text selection.
|   drop	                        |    DragEvent	                  |  An element is dropped on a valid drop target.
|   durationchange	            |    Event	                     |  The duration attribute has been updated.
|   emptied	                     |    Event	                     |  The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.
|   end 	                        |    Event	                     |  The speech recognition service has disconnected.
|   end 	                        |    SpeechSynthesisEvent	      |  The utterance has finished being spoken.
|   ended	                     |    Event                       |  Playback has stopped because the end of the media was reached.
|   ended	                     |    Event	                     |  Playback has stopped because the end of the media was reached.
|   endEvent	                  |    TimeEvent	                  |  A SMIL animation element ends.
|   error	                     |    UIEvent	                  |  A resource failed to load.
|   error	                     |    ProgressEvent	            |  Progression has failed.
|   error	                     |    Event	                     |  An error occurred while downloading the cache manifest or updating the content of the application.
|   error	                     |    Event	                     |  A WebSocket connection has been closed with prejudice (some data couldn't be sent for example).
|   error	                     |    Event	                     |  An event source connection has been failed.
|   error	                     |    Event	                     |  A request caused an error and failed.
|   error 	                     |    Event	                     |  A speech recognition error occurs.
|   error	                     |    SpeechSynthesisErrorEvent	|  An error occurs that prevents the utterance from being successfully spoken.
|   focus	                     |    FocusEvent	               |  An element has received focus (does not bubble).
|   focusinUnimplemented 	      |    FocusEvent	               |  An element is about to receive focus (bubbles).
|   (see bug 687787)             |                                |
|   focusoutUnimplemented 	      |    FocusEvent	               |  An element is about to lose focus (bubbles).
|   (see bug 687787)             |                                |
|   fullscreenchange	            |    Event	                     |  An element was turned to fullscreen mode or back to normal mode.
|   fullscreenerror	            |    Event	                     |  It was impossible to switch to fullscreen mode for technical reasons or because the permission was denied.
|   gamepadconnected	            |    GamepadEvent	               |  A gamepad has been connected.
|   gamepaddisconnected	         |    GamepadEvent	               |  A gamepad has been disconnected.
|   gotpointercapture	         |    PointerEvent	               |  Element receives pointer capture.
|   hashchange	                  |    HashChangeEvent	            |  The fragment identifier of the URL has changed (the part of the URL after the #).
|   lostpointercapture	         |    PointerEvent	               |  Element lost pointer capture.
|   input	                     |    Event	                     |  The value of an element changes or the content of an element with the attribute contenteditable is modified.
|   invalid	                     |    Event	                     |  A submittable element has been checked and doesn't satisfy its constraints.
|   keydown	                     |    KeyboardEvent	            |  A key is pressed down.
|   keypress	                  |    KeyboardEvent	            |  A key is pressed down and that key normally produces a character value (use input instead).
|   keyup	                     |    KeyboardEvent               |  A key is released.
|   languagechange 	            |    Event	                     |  The user's preferred languages have changed.
|   levelchange	               |    Event	                     |  The level attribute has been updated.
|   load	                        |    UIEvent	                  |  A resource and its dependent resources have finished loading.
|   load	                        |    ProgressEvent	            |  Progression has been successful.
|   loadeddata	                  |    Event	                     |  The first frame of the media has finished loading.
|   loadedmetadata	            |    Event	                     |  The metadata has been loaded.
|   loadend	                     |    ProgressEvent	            |  Progress has stopped (after "error", "abort" or "load" have been dispatched).
|   loadstart	                  |    ProgressEvent	            |  Progress has begun.
|   mark 	                     |    SpeechSynthesisEvent	      |  The spoken utterance reaches a named SSML "mark" tag.
|   message	                     |    MessageEvent	               |  A message is received through a WebSocket.
|   message	                     |    MessageEvent	               |  A message is received from a Web Worker.
|   message	                     |    MessageEvent	               |  A message is received from a child (i)frame or a parent window.
|   message	                     |    MessageEvent	               |  A message is received through an event source.
|   message 	                  |    ServiceWorkerMessageEvent   |  A message is received from a service worker, or a message is received in a service worker from another context.
|                                |    or ExtendableMessageEvent,  |
|   mousedown	                  |    MouseEvent	               |  A pointing device button (usually a mouse) is pressed on an element.
|   mouseenter	                  |    MouseEvent	               |  A pointing device is moved onto the element that has the listener attached.
|   mouseleave	                  |    MouseEvent	               |  A pointing device is moved off the element that has the listener attached.
|   mousemove	                  |    MouseEvent	               |  A pointing device is moved over an element.
|   mouseout	                  |    MouseEvent	               |  A pointing device is moved off the element that has the listener attached or off one of its children.
|   mouseover	                  |    MouseEvent	               |  A pointing device is moved onto the element that has the listener attached or onto one of its children.
|   mouseup	                     |    MouseEvent	               |  A pointing device button is released over an element.
|   nomatch 	                  |    SpeechRecognitionEvent	   |  The speech recognition service returns a final result with no significant recognition.
|   notificationclick	         |    NotificationEvent	         |  A system notification spawned by ServiceWorkerRegistration.showNotification() has been clicked.
|   noupdate	                  |    Event	                     |  The manifest hadn't changed.
|   obsolete	                  |    Event	                     |  The manifest was found to have become a 404 or 410 page, so the application cache is being deleted.
|   offline	                     |    Event	                     |  The browser has lost access to the network.
|   online	                     |    Event	                     |  The browser has gained access to the network (but particular websites might be unreachable).
|   open	                        |    Event	                     |  A WebSocket connection has been established.
|   open	                        |    Event	                     |  An event source connection has been established.
|   orientationchange	         |    Event	                     |  The orientation of the device (portrait/landscape) has changed
|   pagehide	                  |    PageTransitionEvent	      |  A session history entry is being traversed from.
|   pageshow	                  |    PageTransitionEvent	      |  A session history entry is being traversed to.
|   paste	                     |    ClipboardEvent	            |  Data has been transferred from the system clipboard to the document.
|   pause	                     |    Event	                     |  Playback has been paused.
|   pause 	                     |    SpeechSynthesisEvent	      |  The utterance is paused part way through.
|   pointercancel	               |    PointerEvent	               |  The pointer is unlikely to produce any more events.
|   pointerdown	               |    PointerEvent	               |  The pointer enters the active buttons state.
|   pointerenter	               |    PointerEvent	               |  Pointing device is moved inside the hit-testing boundary.
|   pointerleave	               |    PointerEvent	               |  Pointing device is moved out of the hit-testing boundary.
|   pointerlockchange	         |    Event	                     |  The pointer was locked or released.
|   pointerlockerror	            |    Event	                     |  It was impossible to lock the pointer for technical reasons or because the permission was denied.
|   pointermove	               |    PointerEvent	               |  The pointer changed coordinates.
|   pointerout	                  |    PointerEvent	               |  The pointing device moved out of hit-testing boundary or leaves detectable hover range.
|   pointerover	               |    PointerEvent	               |  The pointing device is moved into the hit-testing boundary.
|   pointerup	                  |    PointerEvent	               |  The pointer leaves the active buttons state.
|   play	                        |    Event	                     |  Playback has begun.
|   playing	                     |    Event	                     |  Playback is ready to start after having been paused or delayed due to lack of data.
|   popstate	                  |    PopStateEvent	            |  A session history entry is being navigated to (in certain cases).
|   progress	                  |    ProgressEvent	            |  In progress.
|   progress	                  |    ProgressEvent	            |  The user agent is downloading resources listed by the manifest.
|   push	                        |    PushEvent	                  |  A Service Worker has received a push message.
|   pushsubscriptionchange	      |    PushEvent	                  |  A PushSubscription has expired.
|   ratechange	                  |    Event	                     | 	he playback rate has changed.
|   readystatechange	            |    Event	                     |  The readyState attribute of a document has changed.
|   repeatEvent	               |    TimeEvent	                  |  A SMIL animation element is repeated.
|   reset	                     |    Event	                     |  A form is reset.
|   resize	                     |    UIEvent	                  |  The document view has been resized.
|   resourcetimingbufferfull	   |    Performance	               |  The browser's resource timing buffer is full.
|   result 	                     |    SpeechRecognitionEvent      |  The speech recognition service returns a result — a word or phrase has been positively recognized and this has been communicated back to the app.
|   resume 	                     |    SpeechSynthesisEvent	      |  A paused utterance is resumed.
|   scroll	                     |    UIEvent                     |  The document view or an element has been scrolled.
|   seeked	                     |    Event	                     |  A seek operation completed.
|   seeking	                     |    Event	                     |  A seek operation began.
|   select	                     |    UIEvent	                  |  Some text is being selected.
|   selectstart 	               |    Event	                     |  A selection just started.
|   selectionchange 	            |    Event	                     |  The selection in the document has been changed.
|   show		                     |    MouseEvent                  |  A contextmenu event was fired on/bubbled to an element that has a contextmenu attribute
|   soundend 	                  |    Event	                     |  Any sound — recognisable speech or not — has stopped being detected.
|   soundstart                   |    Event	                     |  Any sound — recognisable speech or not — has been detected.
|   speechend 	                  |    Event	                     |  Speech recognised by the speech recognition service has stopped being detected.
|   speechstart                  |    Event	                     |  Sound that is recognised by the speech recognition service as speech has been detected.
|   stalled	                     |    Event	                     |  The user agent is trying to fetch media data, but data is unexpectedly not forthcoming.
|   start 	                     |    Event	                     |  The speech recognition service has begun listening to incoming audio with intent to recognize grammars associated with the current SpeechRecognition.
|   start	                     |    SpeechSynthesisEvent	      |  The utterance has begun to be spoken.
|   storage	                     |    StorageEvent	               |  A storage area (localStorage or sessionStorage) has changed.
|   submit	                     |    Event	                     |  A form is submitted.
|   success	                     |    Event	                     |  A request successfully completed.
|   suspend	                     |    Event	                     |  Media data loading has been suspended.
|   SVGAbort                     |    SVGEvent                    |  Page loading has been stopped before the SVG was loaded.
|   SVGError                     |    SVGEvent                    |  An error has occurred before the SVG was loaded.
|   SVGLoad	                     |    SVGEvent                    |  An SVG document has been loaded and parsed.
|   SVGResize	                  |    SVGEvent                    |  An SVG document is being resized.
|   SVGScroll	                  |    SVGEvent                    |  An SVG document is being scrolled.
|   SVGUnload	                  |    SVGEvent                    |  An SVG document has been removed from a window or frame.
|   SVGZoom	                     |    SVGZoomEvent	               |  An SVG document is being zoomed.
|   timeout	                     |    ProgressEvent               |
|   timeupdate	                  |    Event	                     |  The time indicated by the currentTime attribute has been updated.
|   touchcancel                  |    TouchEvent	               |  A touch point has been disrupted in an implementation-specific manners (too many touch points for example).
|   touchend	                  |    TouchEvent	               |  A touch point is removed from the touch surface.
|   touchmove	                  |    TouchEvent	               |  A touch point is moved along the touch surface.
|   touchstart	                  |    TouchEvent	               |  A touch point is placed on the touch surface.
|   transitionend	               |    TransitionEvent	            |  A CSS transition has completed.
|   unload	                     |    UIEvent	                  |  The document or a dependent resource is being unloaded.
|   updateready	               |    Event	                     |  The resources listed in the manifest have been newly redownloaded, and the script can use swapCache() to switch to the new cache.
|   upgradeneeded	               |      	                        |  An attempt was made to open a database with a version number higher than its current version. A versionchange transaction has been created.
|   userproximity	               |    UserProximityEvent	         |  Fresh data is available from a proximity sensor (indicates whether the nearby object is near the device or not).
|   voiceschanged                | 	  Event	                     |  The list of SpeechSynthesisVoice objects that would be returned by the SpeechSynthesis.getVoices() method has changed (when the voiceschanged event fires.)
|   versionchange	               |      	                        |  A versionchange transaction completed.
|   visibilitychange	            |    Event	                     |  The content of a tab has become visible or has been hidden.
|   volumechange	               |    Event	                     |  The volume has changed.
|   vrdisplayconnected 	         |    Event	                     |  A compatible VR device has been connected to the computer.
|   vrdisplaydisconnected 	      |    Event	                     |  A compatible VR device has been disconnected from the computer.
|   vrdisplaypresentchange 	   |    Event	                     |  The presenting state of a VR device has changed — i.e. from presenting to not presenting, or vice versa.
|   waiting	                     |    Event	                     |  Playback has stopped because of a temporary lack of data.
|   wheel	                     |    WheelEvent                  |  A wheel button of a pointing device is rotated in any direction.
--------------------------------------------------------------------------------------------------------------------------------------------------------
